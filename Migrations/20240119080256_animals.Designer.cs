// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimbirSoft.Data;

#nullable disable

namespace SimbirSoft.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240119080256_animals")]
    partial class animals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("SimbirSoft.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SimbirSoft.Models.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("animalTypesId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("chipperId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("chippingDateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("chippingLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("deathDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("height")
                        .HasColumnType("REAL");

                    b.Property<float>("length")
                        .HasColumnType("REAL");

                    b.Property<string>("lifestatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("visitedLocationsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("chipperId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("SimbirSoft.Models.AnimalType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("AnimalTypes");
                });

            modelBuilder.Entity("SimbirSoft.Models.Chipper", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Chipper");
                });

            modelBuilder.Entity("SimbirSoft.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("longitude")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SimbirSoft.Models.VisitedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateTimeOfVisitLocationPoint")
                        .HasColumnType("TEXT");

                    b.Property<long>("locationPointId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("locationPointId");

                    b.ToTable("VisitedLocations");
                });

            modelBuilder.Entity("SimbirSoft.Models.Animal", b =>
                {
                    b.HasOne("SimbirSoft.Models.Chipper", "chipper")
                        .WithMany()
                        .HasForeignKey("chipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chipper");
                });

            modelBuilder.Entity("SimbirSoft.Models.AnimalType", b =>
                {
                    b.HasOne("SimbirSoft.Models.Animal", null)
                        .WithMany("animalTypes")
                        .HasForeignKey("AnimalId");
                });

            modelBuilder.Entity("SimbirSoft.Models.VisitedLocation", b =>
                {
                    b.HasOne("SimbirSoft.Models.Animal", null)
                        .WithMany("VisitedLocations")
                        .HasForeignKey("AnimalId");

                    b.HasOne("SimbirSoft.Models.Location", "locationPoint")
                        .WithMany()
                        .HasForeignKey("locationPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("locationPoint");
                });

            modelBuilder.Entity("SimbirSoft.Models.Animal", b =>
                {
                    b.Navigation("VisitedLocations");

                    b.Navigation("animalTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
